.\" Automatically generated by Pod::Man 2.12 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ridgerunner 1"
.TH ridgerunner 1 "2009-08-25" "ridgerunner2.0.0" "ridgerunner"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fBridgerunner\fR \- minimize the ropelength of a Geomview \s-1VECT\s0 file using constrained gradient descent
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBridgerunner\fR [\-s N or other stopping criterion] <input file.vect>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBridgerunner\fR is a tool for minimizing the (polygonal) ropelength of
a space curve. It is designed for long runs, producing very accurate
and carefully resolved minimum ropelength configurations. The basic
algorithm is described in the paper \fIKnot Tightening By Constrained
Gradient Descent\fR.
.PP
\&\fBridgerunner\fR minimizes the length of a \s-1VECT\s0 file subject to a family
of constraints which model an embedded tube around the curve. These
constraints take the form of distance constraints on pairs of edges of
the curve modelling self-contacts of the tube (called \fIstruts\fR) and a
lower bound on the polygonal radius of curvature of the curve (called
\&\fIkinks\fR).
.PP
The radius of the tube can be set with the \fB\-\-TubeRadius\fR option. The
default is 0.5, corresponding to unit diameter tube. The stiffness of
the tube can be changed by adjusting the \fB\-\-Lambda\fR option, which
gives a minimum radius of curvature for a unit-diameter tube.
.PP
A \fBridgerunner\fR run can be separated into four stages:
.IP "\fIStartup\fR" 4
.IX Item "Startup"
By default, if the curve has thickness > 0.5, we move immediately to
the next stage of the run, \fIStepping\fR. Until the tube contacts
itself, this is simply a curve-shortening flow.
.Sp
If the curve has thickness < 0.5, or the \fI\-\-autoscale\fR option is given,
the curve is scaled to thickness 0.501 before the run begins.
.Sp
If the \fI\-\-continue\fR option is given, we move immediately to
\&\fIStepping\fR even if the thickness of the curve is < 0.5. This can be
used to resume a run in progress. (This can be dangerous if the initial
configuration already has a large number of struts and kinks.)
.IP "\fIStepping\fR" 4
.IX Item "Stepping"
The program resolves the gradient of length of the curve (a large
vector) against a matrix of gradients of active constraints (struts
and kinks) at each step to deduce the direction of steepest descent
which preserves the active constraints to first order. The size of the
step by a line search algorithm to to minimize ropelength as much as
possible by stepping in the given direction. Even though the final
direction preserves the constraints to first order, it violates them
to second order, and so the thickness of the configuration will drift
down over time. When the thickness is too short, it is corrected by a
Newton's method algorithm or by rescaling. There are several options
which control the behavior of the stepper.
.RS 4
.IP "\fI\-\-AnimationStepper\fR" 4
.IX Item "--AnimationStepper"
This turns on a package of changes to how the program handles
stepping, equilateralization and correction stepping which are
designed to produce very attractive movies of shrinking knots. This
stepper is not as effective as the default stepper in producing
configurations with very low ropelength and residual so the stopping
criteria should be set accordingly (use of \-\-StopRes with the
animation stepper is discouraged).
.IP "\fI\-\-Timewarp\fR" 4
.IX Item "--Timewarp"
If portions of the curve are constrained (have struts or kinks) and
other portions are strut and kink-free, it may take a very long time
for the free portions of the curve to reach their final (straight)
configuration. This is particularly noticeable when running
configurations with fixed endpoints. \fI\-\-Timewarp\fR accelerates this
process by scaling up the gradient of length on free sections of the
curve. There is a performance cost in turning this on if there are no
such segments, so it is optional.
.IP "\fI\-\-EqOn\fR" 4
.IX Item "--EqOn"
If the ratio of the lengths of the longest and shortest segments of
the curve is > 3, this will re-equilateralize the curve using a
splining algorithm. (This will destroy the current set of
self-contacts.) This is useful in the initial stages of a run, since
vertices will tend to bunch up when the curve moves a long distance
under the curve-shortening flow. However, since the minimum ropelength
configuration is probably non-equilateral, running with this option on
may prevent the program from ever reaching a configuration with very
low residual. Therefore, we recommend you do not use this option with
\&\fI\-\-StopRes\fR.
.IP "\fI\-\-OverstepTol=X\fR and \fI\-\-MinRadOverstepTol=Y\fR" 4
.IX Item "--OverstepTol=X and --MinRadOverstepTol=Y"
The program accepts self-contacts as small as \fITubeRadius*(1\-X)\fR and
kinks with MinRad as small as \fILambda*TubeRadius*(1\-Y)\fR before it
attempts to correct the thickness of the curve. By default, this is
set to 1e\-5. For very highly resolved configurations this can be set
smaller. The algorithm will be considerably slower, but somewhat more
accurate. Setting this too low may cause bad results for numerical
reasons.
.IP "\fI\-\-MaxStep=X\fR" 4
.IX Item "--MaxStep=X"
This is a simple upper bound on the maximum step size. This is only
meaningful if \fI\-\-AnimationStepper\fR is turned on as well.
.IP "\fI\-\-Rcond\fR" 4
.IX Item "--Rcond"
This turns on one of the logfiles, which records the reciprocal
condition number (rcond) of the matrix of active constraints at each
step. This information is useful (to the designers of \fBridgerunner\fR,
at least) but takes substantial time to record.
.RE
.RS 4
.RE
.IP "\fIDisplay\fR" 4
.IX Item "Display"
During the run, the following quantities are recorded in logfiles (see
\&\fIOutput\fR, below):
.RS 4
.IP "edgelenvariance" 4
.IX Item "edgelenvariance"
The variance of edge lengths of the polygon.
.IP "length" 4
.IX Item "length"
The length of the polygon.
.IP "maxovermin" 4
.IX Item "maxovermin"
The ratio of maximum and minimum edge lengths on the polygon.
.IP "memused" 4
.IX Item "memused"
The amount of memory allocated by the program (in \s-1KB\s0), on systems
which support the \fImallinfo\fR libc function.
.IP "minrad" 4
.IX Item "minrad"
The minimum polygonal radius of curvature of the polygon.
.IP "rcond" 4
.IX Item "rcond"
The reciprocal condition number of the matrix of gradients of active
constraints.
.IP "residual" 4
.IX Item "residual"
The quotient of the norm of the gradient of the length after
resolution against active constraints and the norm of the gradient of
length (between 1 and 0).
.IP "ropelength" 4
.IX Item "ropelength"
The ropelength of the polygon.
.IP "strutcount" 4
.IX Item "strutcount"
The number of active constraints (struts and kinks).
.IP "thickness" 4
.IX Item "thickness"
The thickness of the polygon (note that this depends on the stiffness
\&\fI\-\-Lambda\fR and may not be equal to the tube radius).
.IP "walltime" 4
.IX Item "walltime"
The amount of time since the start of the run.
.RE
.RS 4
.Sp
Any or all of these can be displayed on the screen during a run with
the \fI\-\-Display=\fR option. To display residual and walltime, for
instance, one would use \fI\-\-Display=residual \-\-Display=walltime\fR.
.RE
.IP "\fIStopping\fR" 4
.IX Item "Stopping"
The program continues to step until one of the stopping criteria is
reached. The user can set as many stopping criteria as desired.
.RS 4
.IP "\fI\-\-StopRes=X\fR" 4
.IX Item "--StopRes=X"
The quotient of the norms of the resolved gradient and the original
gradient of length is called the \fIresidual\fR of the
configuration. When residual = 0, the configuration is a constrained
critical point. When the residual = 1, there are no active
constraints. If the \fI\-\-StopRes=X\fR option is given, the program stops
when the residual is lower than X. In practice, a run with residual <
1e\-4 is very good.
.IP "\fI\-\-StopSteps=N\fR" 4
.IX Item "--StopSteps=N"
This is the simplest stopping criterion, halting the program after a
fixed number of steps.
.IP "\fI\-\-StopTime=N\fR" 4
.IX Item "--StopTime=N"
Halts the program after N minutes of wall clock time. This is usually
used in conjunction with another stopping criterion to make sure that
crashed runs do not continue forever. By default, this is set to stop
the run after one week.
.IP "\fI\-\-Stop20=delta\fR" 4
.IX Item "--Stop20=delta"
Stops the program when the change in ropelength over the last 20 steps 
is less than delta. This is rarely used in practice.
.RE
.RS 4
.RE
.IP "\fIFile Output\fR" 4
.IX Item "File Output"
If the input file is called \fIfile.vect\fR, \fBridgerunner\fR creates a
directory called \fIfile.rr\fR. This directory stores the run logfile,
copies of the initial and final configurations of the curve, and
subdirectories called \fIlogfiles\fR, \fIsnapshots\fR, and \fIvectfiles\fR.
.Sp
\&\fIlogfiles\fR contains the log files discussed under \fIDisplay\fR
above. All quantities are logged at intervals, and the files are
compressed so that they contain evenly spaced quantities from the
entire run, but have size at most 100 \s-1KB\s0. The \fI\-\-MaxLogSize\fR option
can be used to control this size. The \fI\-\-NoLsqrLog\fR turns off the log
for the lsqr subroutine, which can be quite large for problems where
the linear algebra is very difficult.
.Sp
\&\fIvectfiles\fR contains intermediate configurations of the polygon which
is being minimized. The size of this directory is usually limited to
100 \s-1MB\s0, but this limit can be adjusted with the \fI\-\-MaxVectDirSize\fR
option. The option \fI\-\-NoOutputFiles\fR leaves this subdirectory empty,
which increases speed on long runs. The files in \fIvectfiles\fR are
ordinarily colored according to a set of standard colors for the
components of a link. This can be turned off with \fI\-\-NoColor\fR. We
also generally highlight straight sections of the tube and sections
which are kinked. This highlighting can be turned off with
\&\fI\-\-NoHighlight\fR. If the \fBpovrayutils\fR, \fBplsurf\fR, and \fBvecttools\fR
libraries are installed, along with \fBpovray\fR, this directory can be
animated with the script \fBpovanimate\fR, which is installed with
\&\fBridgerunner\fR.
.Sp
\&\fIsnapshots\fR contains copies of the configuration (X.vect), together
with the gradient of length field (X.dlen.vect), the struts
(X.struts.vect), the constrained gradient of length field
(X.dVdt.vect). The file (X.geom) is a geomview file which displays all
of these together. Snapshots are saved every 10,000 (or
\&\fI\-\-SnapshotInterval\fR) steps.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
\&\fBridgerunner\fR is usually called first on a relatively low resolution
file to reach an approximately tight configuration, then the
resolution is increased with \fBsplinevect \-\-mps\fR and the curve is run
again. The process is repeated until the run converges to the desired
accuracy. Here are some example calls:
.PP
ridgerunner \-s 100 trefoil.vect
.PP
A demonstration run for 100 steps on the file \fItrefoil.vect\fR.
.PP
ridgerunner \-\-StopRes=0.01 \-\-NoOutputFiles \-\-NoLsqrLog \-a trefoil.vect
.PP
A typical low-resolution run, starting from a loose configuration,
which is tuned for speed by calling \fI\-a\fR to scale to low thickness
before we start, and suppressing both intermediate configurations
(with \fI\-\-NoOutputFiles\fR) and the log from lsqr (with \fI\-\-NoLsqrLog\fR).
.PP
ridgerunner \-\-StopRes=1e\-4 \-\-StopTime=1440 \-\-NoOutputFiles \-\-NoLsqrLog trefoil.vect
.PP
A typical high-resolution run (there is no point in running low-res
configurations to such a low residual), again tuned for speed.
.PP
ridgerunner \-\-StopRes=0.01 \-\-AnimationStepper \-\-MaxVectDirSize=250M trefoil.vect
.PP
A typical animation run. Even though we are starting with a ``loose''
configuration, we don't automatically scale (presumably, we want to
see the curve shrink). We use the animation stepper to create a
smoother movie, and also increase the size of the \fIvectfiles\fR
directory to make sure that we don't lose any frames. The stopping
criterion is set to a relatively large residual because the final
stages are likely to involve relatively little visible change in the
knot.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBstrutplot\fR, <http://www.geomview.org>, \fBplCurve\fR, \fBtsnnls\fR, \fBoctrope\fR
.SH "AUTHORS"
.IX Header "AUTHORS"
Jason Cantarella and Michael Piatek
.SH "LICENSE RESTRICTIONS"
.IX Header "LICENSE RESTRICTIONS"
This program is covered by the \s-1GNU\s0 General Public License for free software.
